#!/usr/bin/env python
# coding: utf-8

from __future__ import unicode_literals
from __future__ import print_function

import codecs
import argparse

CU_OT    = '\u047f'
CU_OMEGA = '\u0461'
CU_UK    = '\u0479'

CU_UK_NFD = '\u1c82\u0443'
CU_UK_NFD2 = '\u043e\u0443'

CU_ACCENTS_1 = [  # Aleksandr put only those for the start of the word patterns
    '\u0300',
    '\u0301',
    '\u0311',
    '\u0308'
]

CU_ACCENTS_2 = [
    unichr(x) for x in range(ord('\u2de0'), ord('\u2dff')+1)
] + [
    unichr(x) for x in range(ord('\ua674'), ord('\ua67d')+1)
]

CU_POKRYTIE = '\u0487'

CU_COMBINERS = CU_ACCENTS_1 + [
    '\u0486',
    '\u0306',
    '\u033e',
    '\ua67d',
    '\ua67c',
    '\u0307',
    '\u030f',
    '\u0483',
    '\u0487',
] + CU_ACCENTS_2

CU_YEROK     = '\u2e2f'
CU_YER       = '\u044a'
CU_TALL_YER  = '\u1c86'
CU_SOFT_SIGN = '\u044c'

CU_PAEROK = '\ua67f'
CU_KAVYKA = '\ua67e'
CU_COMB_TITLO_LEFT = '\ufe2e'
CU_COMB_TITLO_RIGHT = '\ufe2f'
CU_COMB_CONJ_MACRON = '\ufe26'

CU_BREATHING = '\u0486'
CU_BREATHING_HARD = '\u0485'


def main_tex(args):

    with codecs.open(args.output, 'w', 'utf-8') as f:
        f.write('%% declare all possible combineres (generated by make_declare_accents)\n')

        for x in CU_COMBINERS + [CU_BREATHING, CU_BREATHING_HARD]:
            f.write('\\cu@declare@accent{\u25cc%s}\n' % x)
        f.write('%% end of generated block\n')

    return 0

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Generates accent declarations for use in cu-util.sty')
    parser.add_argument('output', help='Output file name')

    args = parser.parse_args()
    parser.exit(main_tex(args))
